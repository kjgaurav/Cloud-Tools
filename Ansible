1. Ansible

Ansible is an open source IT Configuration Management, Deployment & Orchestration tool.
It aims to provide large productivity gains to a wide variety of automation challenges.
This tool is very simple to use yet powerful enough to automate complex multi-tier IT application environments.

Key Features:

1. Simple: Ansible uses a simple syntax written in YAML called playbooks. YAML is a human-readable data serialization language.
2. Agentless: Finally, Ansible is completely agentless. There are no agents/software or additional firewall ports that you need to install on the  client systems or hosts which you want to automate.
3. Powerful & Flexible: Ansible has powerful features that can enable us to model even the most complex IT workflows.
4. Configuration Management : Ansible is designed to be very simple, reliable and consistent for configuration management. 
5. Orchestration: Ansible provides Orchestration in the sense of aligning the business request with the applications, data, and infrastructure.
6. Security and Compliance: When we define our security policy in Ansible, scanning and remediation of site-wide security policy can be integrated into other automated processes. And it’ll be integral in everything that is deployed. It means that, you need to configure your security details once in your control machine and it will be embedded in all other nodes automatically. 
7. Application Deployment: When we define our application with Ansible, and manage the deployment with Ansible Tower, teams are able to effectively manage the entire application life cycle from development to production.

USE CASES
Complete IT automation
Ansible seamlessly unites workflow orchestration with configuration management, provisioning, and application deployment in one easy-to-use and deploy platform.
Regardless of where you start with Ansible, you’ll find our simple, powerful and agentless automation platform has the capabilities to solve your most challenging problems.

1. Provisioning : Your apps have to live somewhere. If you’re PXE booting and kickstarting bare-metal servers or VMs, or creating virtual or cloud instances from templates, Ansible and Red Hat® Ansible® Tower help streamline the process.
2. Configuration Management : Centralizing configuration file management and deployment is a common use case for Ansible, and it’s how many power users are first introduced to the Ansible automation platform.
3. Application Deployment : When you define your application with Ansible, and manage the deployment with Ansible Tower, teams are able to effectively manage the entire application lifecycle from development to production.
4. Continuous Delivery : Creating a CI/CD pipeline requires buy-in from numerous teams. You can’t do it without a simple automation platform that everyone in your organization can use. Ansible Playbooks keep your applications properly deployed (and managed) throughout their entire lifecycle.
5. Security & Compliance :When you define your security policy in Ansible, scanning and remediation of site-wide security policy can be integrated into other automated processes and instead of being an afterthought, it’ll be integral in everything that is deployed.
6. Orchestration : Configurations alone don’t define your environment. You need to define how multiple configurations interact and ensure the disparate pieces can be managed as a whole. Out of complexity and chaos, Ansible brings order.

USE CASE:
1) Provisioning
Automate, manage and connect all stages of an application lifecycle

From traditional bare metal through to serverless or function-as-a-service, automating the provisioning of any infrastructure is the first step in automating the operational life cycle of your applications. Ansible can provision the latest cloud platforms, virtualized hosts and hypervisors, network devices and bare-metal servers.
After bootstrapping, nodes can be connected to storage, added to a load balancer, security patched or any number of other operational tasks by separate teams. In essence Ansible becomes the connecting tool in any of your process pipelines – taking bare infrastructure right through to day to day management, automatically.

Provisioning with Ansible allows you to seamlessly transition into configuration management, orchestration and application deployment using the same simple, human readable, automation language.

Infrastructure Platforms
Baremetal
Underneath virtualization and cloud platforms there is always the physical server. When it's your own cloud or hypervisor system you still need to provision bare metal some of the time. Ansible integrates with many datacenter management tools to both invoke and enact the provisioning steps required.

Virtualized
Hypervisors, virtual storage and virtual networks – the transition from physical devices as the base platform has opened up increasingly diverse scenarios at previously unavailable scale. Tame the complexity with Ansible to simplify the experience of cross platform management. The large selection of available modules gives you the flexibility and choice to manage your diverse environment.

Networks
Ansible Network Automation allows users to configure, validate and ensure continuous compliance for physical network devices. Ansible is the only language that can easily provision across multi-vendor environments, often replacing the need for manual processes that exist across network environments.

Storage
Ansible can provision and manage the storage in your infrastructure. From software-defined  storage, cloud based storage, or even hardware storage appliances, you can find a module to leverage Ansible’s common, powerful language.

Cloud
Public Cloud
Ansible is packaged with hundreds of modules supporting services on the largest public cloud platforms. Compute, storage and networking modules allow playbooks to directly provision these services. Ansible can even act as an orchestrator of other popular provisioning tools, giving you a high level, self documented, workflow.

Private Cloud
One of the easiest ways to deploy, configure and orchestrate OpenStack private cloud is using Ansible. Ansible can be used to provision the underlying infrastructure, install services, add compute hosts, and more. Once the underlying environment is provisioned, Ansible can also be used provision resources, services, and applications inside of your cloud.

Self-Service with Ansible Tower
Red Hat Ansible Tower helps you scale IT automation, manage complex deployments and speed productivity. Centralize and control your IT infrastructure with a visual dashboard, role-based access control, job scheduling, integrated notifications and graphical inventory management. And Ansible Tower's REST API and CLI make it easy to embed Ansible Tower into existing tools and processes.


2). CONFIGURATION MANAGEMENT
KEEP IT SIMPLE
It's likely you currently manage your systems with a collection of scripts and ad-hoc practices curated by a talented team of administrators. Or perhaps you're using an automation framework that requires a bit too much of your time to maintain. Virtualization and cloud technology have increased the complexity and the number of systems to manage is only growing.

You need a consistent, reliable and secure way to manage the environment - but many solutions have gone way too far the other direction, actually adding complexity to an already complicated problem. You need a system that builds on existing concepts you already understand and doesn’t require a large team of developers to maintain.

ANSIBLE MAKES IT AUTOMATION ACCESSIBLE
Ansible is the simplest solution for configuration management available. It's designed to be minimal in nature, consistent, secure and highly reliable, with an extremely low learning curve for administrators, developers and IT managers.

Ansible configurations are simple data descriptions of your infrastructure (both human-readable and machine-parsable) - ensuring everyone on your team will be able to understand the meaning of each configuration task. New team members will be able to quickly dive in and make an impact. Existing team members can get work done faster - freeing up cycles to attend to more critical and strategic work instead of configuration management.

Ansible requires nothing more than a password or SSH key in order to start managing systems and can start managing them without installing any agent software, avoiding the problem of "managing the management" common in many automation systems. There's no more wondering why configuration management daemons are down, when to upgrade management agents, or when to patch security vulnerabilities in those agents.

GOAL-ORIENTED, NOT SCRIPTED
Ansible features an state-driven resource model that describes the desired state of computer systems and services, not the paths to get them to this state. No matter what state a system is in, Ansible understands how to transform it to the desired state (and also supports a "dry run" mode to preview needed changes). This allows reliable and repeatable IT infrastructure configuration, avoiding the potential failures from scripting and script-based solutions that describe explicit and often irreversible actions rather than the end goal.

SECURE & AGENTLESS
Ansible relies on the most secure remote configuration management system available as its default transport layer: OpenSSH. OpenSSH is available for a wide variety of platforms, is very lightweight and when security issues in OpenSSH are discovered, they are patched quickly.

Further, Ansible does not require any remote agents. Ansible delivers all modules to remote systems and executes tasks, as needed, to enact the desired configuration. These modules run with user-supplied credentials, including support for sudo and even Kerberos and clean up after themselves when complete. Ansible does not require root login privileges, specific SSH keys, or dedicated users and respects the security model of the system under management.

As a result, Ansible has a very low attack surface area and is quite easy to deploy into new environments.

BATTERIES INCLUDED
Ansible features over 1,300+ modules in the core distribution, providing a great base to build automation upon. Ansible Galaxy also has over 4,000 community-provided roles that can be used immediately, tailored to your particular environment, or even used as templates for something new.

From services and databases to cloud providers, with Ansible you don't have to start from scratch.

3). Application Deployment
DEPLOYING APPS SHOULDN'T BE SO HARD
Ansible is the simplest way to deploy your applications. It gives you the power to deploy multi-tier applications reliably and consistently, all from one common framework. You can configure needed services as well as push application artifacts from one common system.

Rather than writing custom code to automate your systems, your team writes simple task descriptions that even the newest team member can understand on first read - saving not only up-front costs, but making it easier to react to change over time.

POWER OF THE PLAYBOOKS
REPEATABLE & RELIABLE
Ansible allows you to write 'Playbooks' that are descriptions of the desired state of your systems, which are usually kept in source control. Ansible then does the hard work of getting your systems to that state no matter what state they are currently in. Playbooks make your installations, upgrades and day-to-day management repeatable and reliable.

SIMPLE TO WRITE & MAINTAIN
Playbooks are simple to write and maintain. Most users become productive with Ansible after only a few hours. Ansible uses the same tools you likely already use on a daily basis and playbooks are written in a natural language so they are very easy to evolve and edit.

NO AGENT = MORE SECURE, MORE PERFORMANCE, LESS EFFORT
Thanks to its agentless design, Ansible can be introduced into your environment without any bootstrapping of remote systems or opening up additional ports. Not only does this eliminate "managing the management," but system resource utilization is also dramatically improved.

BATTERIES INCLUDED
Leverage one giant toolbox. Shipping with over 1,300+ modules in the core distribution, Ansible provides a vast library of building blocks for managing all kinds of IT tasks and network software. With Ansible Galaxy, chances are there are community-contributed roles that can help get you started even faster.

ZERO DOWNTIME
Ansible can orchestrate zero downtime rolling updates trivially, ensuring you can update your applications in production without users noticing.

SUPER FLEXIBLE
Downloading artifacts from servers and configuring the OS are just the basics. Talk to REST APIs, update a team chat server with a heads up, or send an email - Ansible can drive all kinds of workflows.

CLOUD READY
Included modules manage not just the local computer system, but can interact with cloud services including Amazon AWS, Microsoft Azure, and more. And since all cloud APIs allow you to trivially inject SSH keys, you can start managing any cloud instance or network software without modifying the base image.






